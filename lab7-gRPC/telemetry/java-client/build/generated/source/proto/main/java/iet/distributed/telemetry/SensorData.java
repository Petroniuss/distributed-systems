// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry.proto

package iet.distributed.telemetry;

/**
 * <pre>
 * Contains measurements of specified type from a single sensor.
 * </pre>
 *
 * Protobuf type {@code iet.distributed.telemetry.SensorData}
 */
public final class SensorData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iet.distributed.telemetry.SensorData)
    SensorDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SensorData.newBuilder() to construct.
  private SensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SensorData() {
    dataType_ = 0;
    measurements_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SensorData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SensorData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            iet.distributed.telemetry.SensorMetadata.Builder subBuilder = null;
            if (metadata_ != null) {
              subBuilder = metadata_.toBuilder();
            }
            metadata_ = input.readMessage(iet.distributed.telemetry.SensorMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadata_);
              metadata_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            dataType_ = rawValue;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              measurements_ = new java.util.ArrayList<iet.distributed.telemetry.Measurement>();
              mutable_bitField0_ |= 0x00000001;
            }
            measurements_.add(
                input.readMessage(iet.distributed.telemetry.Measurement.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        measurements_ = java.util.Collections.unmodifiableList(measurements_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_SensorData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_SensorData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            iet.distributed.telemetry.SensorData.class, iet.distributed.telemetry.SensorData.Builder.class);
  }

  public static final int METADATA_FIELD_NUMBER = 1;
  private iet.distributed.telemetry.SensorMetadata metadata_;
  /**
   * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
   * @return Whether the metadata field is set.
   */
  @java.lang.Override
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public iet.distributed.telemetry.SensorMetadata getMetadata() {
    return metadata_ == null ? iet.distributed.telemetry.SensorMetadata.getDefaultInstance() : metadata_;
  }
  /**
   * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
   */
  @java.lang.Override
  public iet.distributed.telemetry.SensorMetadataOrBuilder getMetadataOrBuilder() {
    return getMetadata();
  }

  public static final int DATA_TYPE_FIELD_NUMBER = 2;
  private int dataType_;
  /**
   * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
   * @return The enum numeric value on the wire for dataType.
   */
  @java.lang.Override public int getDataTypeValue() {
    return dataType_;
  }
  /**
   * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
   * @return The dataType.
   */
  @java.lang.Override public iet.distributed.telemetry.DataType getDataType() {
    @SuppressWarnings("deprecation")
    iet.distributed.telemetry.DataType result = iet.distributed.telemetry.DataType.valueOf(dataType_);
    return result == null ? iet.distributed.telemetry.DataType.UNRECOGNIZED : result;
  }

  public static final int MEASUREMENTS_FIELD_NUMBER = 3;
  private java.util.List<iet.distributed.telemetry.Measurement> measurements_;
  /**
   * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
   */
  @java.lang.Override
  public java.util.List<iet.distributed.telemetry.Measurement> getMeasurementsList() {
    return measurements_;
  }
  /**
   * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends iet.distributed.telemetry.MeasurementOrBuilder> 
      getMeasurementsOrBuilderList() {
    return measurements_;
  }
  /**
   * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
   */
  @java.lang.Override
  public int getMeasurementsCount() {
    return measurements_.size();
  }
  /**
   * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
   */
  @java.lang.Override
  public iet.distributed.telemetry.Measurement getMeasurements(int index) {
    return measurements_.get(index);
  }
  /**
   * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
   */
  @java.lang.Override
  public iet.distributed.telemetry.MeasurementOrBuilder getMeasurementsOrBuilder(
      int index) {
    return measurements_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (metadata_ != null) {
      output.writeMessage(1, getMetadata());
    }
    if (dataType_ != iet.distributed.telemetry.DataType.TEMPERATURE.getNumber()) {
      output.writeEnum(2, dataType_);
    }
    for (int i = 0; i < measurements_.size(); i++) {
      output.writeMessage(3, measurements_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMetadata());
    }
    if (dataType_ != iet.distributed.telemetry.DataType.TEMPERATURE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, dataType_);
    }
    for (int i = 0; i < measurements_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, measurements_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof iet.distributed.telemetry.SensorData)) {
      return super.equals(obj);
    }
    iet.distributed.telemetry.SensorData other = (iet.distributed.telemetry.SensorData) obj;

    if (hasMetadata() != other.hasMetadata()) return false;
    if (hasMetadata()) {
      if (!getMetadata()
          .equals(other.getMetadata())) return false;
    }
    if (dataType_ != other.dataType_) return false;
    if (!getMeasurementsList()
        .equals(other.getMeasurementsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + dataType_;
    if (getMeasurementsCount() > 0) {
      hash = (37 * hash) + MEASUREMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getMeasurementsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static iet.distributed.telemetry.SensorData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static iet.distributed.telemetry.SensorData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.SensorData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.SensorData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(iet.distributed.telemetry.SensorData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Contains measurements of specified type from a single sensor.
   * </pre>
   *
   * Protobuf type {@code iet.distributed.telemetry.SensorData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iet.distributed.telemetry.SensorData)
      iet.distributed.telemetry.SensorDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_SensorData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              iet.distributed.telemetry.SensorData.class, iet.distributed.telemetry.SensorData.Builder.class);
    }

    // Construct using iet.distributed.telemetry.SensorData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMeasurementsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (metadataBuilder_ == null) {
        metadata_ = null;
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }
      dataType_ = 0;

      if (measurementsBuilder_ == null) {
        measurements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        measurementsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_SensorData_descriptor;
    }

    @java.lang.Override
    public iet.distributed.telemetry.SensorData getDefaultInstanceForType() {
      return iet.distributed.telemetry.SensorData.getDefaultInstance();
    }

    @java.lang.Override
    public iet.distributed.telemetry.SensorData build() {
      iet.distributed.telemetry.SensorData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public iet.distributed.telemetry.SensorData buildPartial() {
      iet.distributed.telemetry.SensorData result = new iet.distributed.telemetry.SensorData(this);
      int from_bitField0_ = bitField0_;
      if (metadataBuilder_ == null) {
        result.metadata_ = metadata_;
      } else {
        result.metadata_ = metadataBuilder_.build();
      }
      result.dataType_ = dataType_;
      if (measurementsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          measurements_ = java.util.Collections.unmodifiableList(measurements_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.measurements_ = measurements_;
      } else {
        result.measurements_ = measurementsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof iet.distributed.telemetry.SensorData) {
        return mergeFrom((iet.distributed.telemetry.SensorData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(iet.distributed.telemetry.SensorData other) {
      if (other == iet.distributed.telemetry.SensorData.getDefaultInstance()) return this;
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (other.dataType_ != 0) {
        setDataTypeValue(other.getDataTypeValue());
      }
      if (measurementsBuilder_ == null) {
        if (!other.measurements_.isEmpty()) {
          if (measurements_.isEmpty()) {
            measurements_ = other.measurements_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMeasurementsIsMutable();
            measurements_.addAll(other.measurements_);
          }
          onChanged();
        }
      } else {
        if (!other.measurements_.isEmpty()) {
          if (measurementsBuilder_.isEmpty()) {
            measurementsBuilder_.dispose();
            measurementsBuilder_ = null;
            measurements_ = other.measurements_;
            bitField0_ = (bitField0_ & ~0x00000001);
            measurementsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMeasurementsFieldBuilder() : null;
          } else {
            measurementsBuilder_.addAllMessages(other.measurements_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      iet.distributed.telemetry.SensorData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (iet.distributed.telemetry.SensorData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private iet.distributed.telemetry.SensorMetadata metadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        iet.distributed.telemetry.SensorMetadata, iet.distributed.telemetry.SensorMetadata.Builder, iet.distributed.telemetry.SensorMetadataOrBuilder> metadataBuilder_;
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    public boolean hasMetadata() {
      return metadataBuilder_ != null || metadata_ != null;
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     * @return The metadata.
     */
    public iet.distributed.telemetry.SensorMetadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? iet.distributed.telemetry.SensorMetadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public Builder setMetadata(iet.distributed.telemetry.SensorMetadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public Builder setMetadata(
        iet.distributed.telemetry.SensorMetadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public Builder mergeMetadata(iet.distributed.telemetry.SensorMetadata value) {
      if (metadataBuilder_ == null) {
        if (metadata_ != null) {
          metadata_ =
            iet.distributed.telemetry.SensorMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        metadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        metadata_ = null;
        onChanged();
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public iet.distributed.telemetry.SensorMetadata.Builder getMetadataBuilder() {
      
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    public iet.distributed.telemetry.SensorMetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            iet.distributed.telemetry.SensorMetadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <code>.iet.distributed.telemetry.SensorMetadata metadata = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        iet.distributed.telemetry.SensorMetadata, iet.distributed.telemetry.SensorMetadata.Builder, iet.distributed.telemetry.SensorMetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            iet.distributed.telemetry.SensorMetadata, iet.distributed.telemetry.SensorMetadata.Builder, iet.distributed.telemetry.SensorMetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private int dataType_ = 0;
    /**
     * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
     * @return The enum numeric value on the wire for dataType.
     */
    @java.lang.Override public int getDataTypeValue() {
      return dataType_;
    }
    /**
     * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
     * @param value The enum numeric value on the wire for dataType to set.
     * @return This builder for chaining.
     */
    public Builder setDataTypeValue(int value) {
      
      dataType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
     * @return The dataType.
     */
    @java.lang.Override
    public iet.distributed.telemetry.DataType getDataType() {
      @SuppressWarnings("deprecation")
      iet.distributed.telemetry.DataType result = iet.distributed.telemetry.DataType.valueOf(dataType_);
      return result == null ? iet.distributed.telemetry.DataType.UNRECOGNIZED : result;
    }
    /**
     * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
     * @param value The dataType to set.
     * @return This builder for chaining.
     */
    public Builder setDataType(iet.distributed.telemetry.DataType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      dataType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.iet.distributed.telemetry.DataType data_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDataType() {
      
      dataType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<iet.distributed.telemetry.Measurement> measurements_ =
      java.util.Collections.emptyList();
    private void ensureMeasurementsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        measurements_ = new java.util.ArrayList<iet.distributed.telemetry.Measurement>(measurements_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        iet.distributed.telemetry.Measurement, iet.distributed.telemetry.Measurement.Builder, iet.distributed.telemetry.MeasurementOrBuilder> measurementsBuilder_;

    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public java.util.List<iet.distributed.telemetry.Measurement> getMeasurementsList() {
      if (measurementsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(measurements_);
      } else {
        return measurementsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public int getMeasurementsCount() {
      if (measurementsBuilder_ == null) {
        return measurements_.size();
      } else {
        return measurementsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public iet.distributed.telemetry.Measurement getMeasurements(int index) {
      if (measurementsBuilder_ == null) {
        return measurements_.get(index);
      } else {
        return measurementsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder setMeasurements(
        int index, iet.distributed.telemetry.Measurement value) {
      if (measurementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMeasurementsIsMutable();
        measurements_.set(index, value);
        onChanged();
      } else {
        measurementsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder setMeasurements(
        int index, iet.distributed.telemetry.Measurement.Builder builderForValue) {
      if (measurementsBuilder_ == null) {
        ensureMeasurementsIsMutable();
        measurements_.set(index, builderForValue.build());
        onChanged();
      } else {
        measurementsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder addMeasurements(iet.distributed.telemetry.Measurement value) {
      if (measurementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMeasurementsIsMutable();
        measurements_.add(value);
        onChanged();
      } else {
        measurementsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder addMeasurements(
        int index, iet.distributed.telemetry.Measurement value) {
      if (measurementsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMeasurementsIsMutable();
        measurements_.add(index, value);
        onChanged();
      } else {
        measurementsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder addMeasurements(
        iet.distributed.telemetry.Measurement.Builder builderForValue) {
      if (measurementsBuilder_ == null) {
        ensureMeasurementsIsMutable();
        measurements_.add(builderForValue.build());
        onChanged();
      } else {
        measurementsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder addMeasurements(
        int index, iet.distributed.telemetry.Measurement.Builder builderForValue) {
      if (measurementsBuilder_ == null) {
        ensureMeasurementsIsMutable();
        measurements_.add(index, builderForValue.build());
        onChanged();
      } else {
        measurementsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder addAllMeasurements(
        java.lang.Iterable<? extends iet.distributed.telemetry.Measurement> values) {
      if (measurementsBuilder_ == null) {
        ensureMeasurementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, measurements_);
        onChanged();
      } else {
        measurementsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder clearMeasurements() {
      if (measurementsBuilder_ == null) {
        measurements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        measurementsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public Builder removeMeasurements(int index) {
      if (measurementsBuilder_ == null) {
        ensureMeasurementsIsMutable();
        measurements_.remove(index);
        onChanged();
      } else {
        measurementsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public iet.distributed.telemetry.Measurement.Builder getMeasurementsBuilder(
        int index) {
      return getMeasurementsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public iet.distributed.telemetry.MeasurementOrBuilder getMeasurementsOrBuilder(
        int index) {
      if (measurementsBuilder_ == null) {
        return measurements_.get(index);  } else {
        return measurementsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public java.util.List<? extends iet.distributed.telemetry.MeasurementOrBuilder> 
         getMeasurementsOrBuilderList() {
      if (measurementsBuilder_ != null) {
        return measurementsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(measurements_);
      }
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public iet.distributed.telemetry.Measurement.Builder addMeasurementsBuilder() {
      return getMeasurementsFieldBuilder().addBuilder(
          iet.distributed.telemetry.Measurement.getDefaultInstance());
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public iet.distributed.telemetry.Measurement.Builder addMeasurementsBuilder(
        int index) {
      return getMeasurementsFieldBuilder().addBuilder(
          index, iet.distributed.telemetry.Measurement.getDefaultInstance());
    }
    /**
     * <code>repeated .iet.distributed.telemetry.Measurement measurements = 3;</code>
     */
    public java.util.List<iet.distributed.telemetry.Measurement.Builder> 
         getMeasurementsBuilderList() {
      return getMeasurementsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        iet.distributed.telemetry.Measurement, iet.distributed.telemetry.Measurement.Builder, iet.distributed.telemetry.MeasurementOrBuilder> 
        getMeasurementsFieldBuilder() {
      if (measurementsBuilder_ == null) {
        measurementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            iet.distributed.telemetry.Measurement, iet.distributed.telemetry.Measurement.Builder, iet.distributed.telemetry.MeasurementOrBuilder>(
                measurements_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        measurements_ = null;
      }
      return measurementsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iet.distributed.telemetry.SensorData)
  }

  // @@protoc_insertion_point(class_scope:iet.distributed.telemetry.SensorData)
  private static final iet.distributed.telemetry.SensorData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new iet.distributed.telemetry.SensorData();
  }

  public static iet.distributed.telemetry.SensorData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensorData>
      PARSER = new com.google.protobuf.AbstractParser<SensorData>() {
    @java.lang.Override
    public SensorData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SensorData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SensorData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensorData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public iet.distributed.telemetry.SensorData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

