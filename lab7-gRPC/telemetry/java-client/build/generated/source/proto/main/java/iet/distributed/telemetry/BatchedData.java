// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: telemetry.proto

package iet.distributed.telemetry;

/**
 * <pre>
 * Data is sent in batches:
 * Data from multiple sensors is transmitted in one message.
 * </pre>
 *
 * Protobuf type {@code iet.distributed.telemetry.BatchedData}
 */
public final class BatchedData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iet.distributed.telemetry.BatchedData)
    BatchedDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BatchedData.newBuilder() to construct.
  private BatchedData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BatchedData() {
    sensorData_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BatchedData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BatchedData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (batchStart_ != null) {
              subBuilder = batchStart_.toBuilder();
            }
            batchStart_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(batchStart_);
              batchStart_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (batchEnd_ != null) {
              subBuilder = batchEnd_.toBuilder();
            }
            batchEnd_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(batchEnd_);
              batchEnd_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sensorData_ = new java.util.ArrayList<iet.distributed.telemetry.SensorData>();
              mutable_bitField0_ |= 0x00000001;
            }
            sensorData_.add(
                input.readMessage(iet.distributed.telemetry.SensorData.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sensorData_ = java.util.Collections.unmodifiableList(sensorData_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_BatchedData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_BatchedData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            iet.distributed.telemetry.BatchedData.class, iet.distributed.telemetry.BatchedData.Builder.class);
  }

  public static final int BATCH_START_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp batchStart_;
  /**
   * <pre>
   * when client strted gathering this particular batch
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_start = 1;</code>
   * @return Whether the batchStart field is set.
   */
  @java.lang.Override
  public boolean hasBatchStart() {
    return batchStart_ != null;
  }
  /**
   * <pre>
   * when client strted gathering this particular batch
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_start = 1;</code>
   * @return The batchStart.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getBatchStart() {
    return batchStart_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : batchStart_;
  }
  /**
   * <pre>
   * when client strted gathering this particular batch
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_start = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getBatchStartOrBuilder() {
    return getBatchStart();
  }

  public static final int BATCH_END_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp batchEnd_;
  /**
   * <pre>
   * when client sent batched data
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_end = 2;</code>
   * @return Whether the batchEnd field is set.
   */
  @java.lang.Override
  public boolean hasBatchEnd() {
    return batchEnd_ != null;
  }
  /**
   * <pre>
   * when client sent batched data
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_end = 2;</code>
   * @return The batchEnd.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getBatchEnd() {
    return batchEnd_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : batchEnd_;
  }
  /**
   * <pre>
   * when client sent batched data
   * </pre>
   *
   * <code>.google.protobuf.Timestamp batch_end = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getBatchEndOrBuilder() {
    return getBatchEnd();
  }

  public static final int SENSOR_DATA_FIELD_NUMBER = 3;
  private java.util.List<iet.distributed.telemetry.SensorData> sensorData_;
  /**
   * <pre>
   * batched data
   * </pre>
   *
   * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
   */
  @java.lang.Override
  public java.util.List<iet.distributed.telemetry.SensorData> getSensorDataList() {
    return sensorData_;
  }
  /**
   * <pre>
   * batched data
   * </pre>
   *
   * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends iet.distributed.telemetry.SensorDataOrBuilder> 
      getSensorDataOrBuilderList() {
    return sensorData_;
  }
  /**
   * <pre>
   * batched data
   * </pre>
   *
   * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
   */
  @java.lang.Override
  public int getSensorDataCount() {
    return sensorData_.size();
  }
  /**
   * <pre>
   * batched data
   * </pre>
   *
   * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
   */
  @java.lang.Override
  public iet.distributed.telemetry.SensorData getSensorData(int index) {
    return sensorData_.get(index);
  }
  /**
   * <pre>
   * batched data
   * </pre>
   *
   * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
   */
  @java.lang.Override
  public iet.distributed.telemetry.SensorDataOrBuilder getSensorDataOrBuilder(
      int index) {
    return sensorData_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (batchStart_ != null) {
      output.writeMessage(1, getBatchStart());
    }
    if (batchEnd_ != null) {
      output.writeMessage(2, getBatchEnd());
    }
    for (int i = 0; i < sensorData_.size(); i++) {
      output.writeMessage(3, sensorData_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (batchStart_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBatchStart());
    }
    if (batchEnd_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getBatchEnd());
    }
    for (int i = 0; i < sensorData_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, sensorData_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof iet.distributed.telemetry.BatchedData)) {
      return super.equals(obj);
    }
    iet.distributed.telemetry.BatchedData other = (iet.distributed.telemetry.BatchedData) obj;

    if (hasBatchStart() != other.hasBatchStart()) return false;
    if (hasBatchStart()) {
      if (!getBatchStart()
          .equals(other.getBatchStart())) return false;
    }
    if (hasBatchEnd() != other.hasBatchEnd()) return false;
    if (hasBatchEnd()) {
      if (!getBatchEnd()
          .equals(other.getBatchEnd())) return false;
    }
    if (!getSensorDataList()
        .equals(other.getSensorDataList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBatchStart()) {
      hash = (37 * hash) + BATCH_START_FIELD_NUMBER;
      hash = (53 * hash) + getBatchStart().hashCode();
    }
    if (hasBatchEnd()) {
      hash = (37 * hash) + BATCH_END_FIELD_NUMBER;
      hash = (53 * hash) + getBatchEnd().hashCode();
    }
    if (getSensorDataCount() > 0) {
      hash = (37 * hash) + SENSOR_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getSensorDataList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static iet.distributed.telemetry.BatchedData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static iet.distributed.telemetry.BatchedData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.BatchedData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static iet.distributed.telemetry.BatchedData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(iet.distributed.telemetry.BatchedData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Data is sent in batches:
   * Data from multiple sensors is transmitted in one message.
   * </pre>
   *
   * Protobuf type {@code iet.distributed.telemetry.BatchedData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iet.distributed.telemetry.BatchedData)
      iet.distributed.telemetry.BatchedDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_BatchedData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_BatchedData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              iet.distributed.telemetry.BatchedData.class, iet.distributed.telemetry.BatchedData.Builder.class);
    }

    // Construct using iet.distributed.telemetry.BatchedData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSensorDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (batchStartBuilder_ == null) {
        batchStart_ = null;
      } else {
        batchStart_ = null;
        batchStartBuilder_ = null;
      }
      if (batchEndBuilder_ == null) {
        batchEnd_ = null;
      } else {
        batchEnd_ = null;
        batchEndBuilder_ = null;
      }
      if (sensorDataBuilder_ == null) {
        sensorData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        sensorDataBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return iet.distributed.telemetry.Telemetry.internal_static_iet_distributed_telemetry_BatchedData_descriptor;
    }

    @java.lang.Override
    public iet.distributed.telemetry.BatchedData getDefaultInstanceForType() {
      return iet.distributed.telemetry.BatchedData.getDefaultInstance();
    }

    @java.lang.Override
    public iet.distributed.telemetry.BatchedData build() {
      iet.distributed.telemetry.BatchedData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public iet.distributed.telemetry.BatchedData buildPartial() {
      iet.distributed.telemetry.BatchedData result = new iet.distributed.telemetry.BatchedData(this);
      int from_bitField0_ = bitField0_;
      if (batchStartBuilder_ == null) {
        result.batchStart_ = batchStart_;
      } else {
        result.batchStart_ = batchStartBuilder_.build();
      }
      if (batchEndBuilder_ == null) {
        result.batchEnd_ = batchEnd_;
      } else {
        result.batchEnd_ = batchEndBuilder_.build();
      }
      if (sensorDataBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sensorData_ = java.util.Collections.unmodifiableList(sensorData_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sensorData_ = sensorData_;
      } else {
        result.sensorData_ = sensorDataBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof iet.distributed.telemetry.BatchedData) {
        return mergeFrom((iet.distributed.telemetry.BatchedData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(iet.distributed.telemetry.BatchedData other) {
      if (other == iet.distributed.telemetry.BatchedData.getDefaultInstance()) return this;
      if (other.hasBatchStart()) {
        mergeBatchStart(other.getBatchStart());
      }
      if (other.hasBatchEnd()) {
        mergeBatchEnd(other.getBatchEnd());
      }
      if (sensorDataBuilder_ == null) {
        if (!other.sensorData_.isEmpty()) {
          if (sensorData_.isEmpty()) {
            sensorData_ = other.sensorData_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSensorDataIsMutable();
            sensorData_.addAll(other.sensorData_);
          }
          onChanged();
        }
      } else {
        if (!other.sensorData_.isEmpty()) {
          if (sensorDataBuilder_.isEmpty()) {
            sensorDataBuilder_.dispose();
            sensorDataBuilder_ = null;
            sensorData_ = other.sensorData_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sensorDataBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSensorDataFieldBuilder() : null;
          } else {
            sensorDataBuilder_.addAllMessages(other.sensorData_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      iet.distributed.telemetry.BatchedData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (iet.distributed.telemetry.BatchedData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Timestamp batchStart_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> batchStartBuilder_;
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     * @return Whether the batchStart field is set.
     */
    public boolean hasBatchStart() {
      return batchStartBuilder_ != null || batchStart_ != null;
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     * @return The batchStart.
     */
    public com.google.protobuf.Timestamp getBatchStart() {
      if (batchStartBuilder_ == null) {
        return batchStart_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : batchStart_;
      } else {
        return batchStartBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public Builder setBatchStart(com.google.protobuf.Timestamp value) {
      if (batchStartBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        batchStart_ = value;
        onChanged();
      } else {
        batchStartBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public Builder setBatchStart(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (batchStartBuilder_ == null) {
        batchStart_ = builderForValue.build();
        onChanged();
      } else {
        batchStartBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public Builder mergeBatchStart(com.google.protobuf.Timestamp value) {
      if (batchStartBuilder_ == null) {
        if (batchStart_ != null) {
          batchStart_ =
            com.google.protobuf.Timestamp.newBuilder(batchStart_).mergeFrom(value).buildPartial();
        } else {
          batchStart_ = value;
        }
        onChanged();
      } else {
        batchStartBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public Builder clearBatchStart() {
      if (batchStartBuilder_ == null) {
        batchStart_ = null;
        onChanged();
      } else {
        batchStart_ = null;
        batchStartBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public com.google.protobuf.Timestamp.Builder getBatchStartBuilder() {
      
      onChanged();
      return getBatchStartFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getBatchStartOrBuilder() {
      if (batchStartBuilder_ != null) {
        return batchStartBuilder_.getMessageOrBuilder();
      } else {
        return batchStart_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : batchStart_;
      }
    }
    /**
     * <pre>
     * when client strted gathering this particular batch
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_start = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getBatchStartFieldBuilder() {
      if (batchStartBuilder_ == null) {
        batchStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getBatchStart(),
                getParentForChildren(),
                isClean());
        batchStart_ = null;
      }
      return batchStartBuilder_;
    }

    private com.google.protobuf.Timestamp batchEnd_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> batchEndBuilder_;
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     * @return Whether the batchEnd field is set.
     */
    public boolean hasBatchEnd() {
      return batchEndBuilder_ != null || batchEnd_ != null;
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     * @return The batchEnd.
     */
    public com.google.protobuf.Timestamp getBatchEnd() {
      if (batchEndBuilder_ == null) {
        return batchEnd_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : batchEnd_;
      } else {
        return batchEndBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public Builder setBatchEnd(com.google.protobuf.Timestamp value) {
      if (batchEndBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        batchEnd_ = value;
        onChanged();
      } else {
        batchEndBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public Builder setBatchEnd(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (batchEndBuilder_ == null) {
        batchEnd_ = builderForValue.build();
        onChanged();
      } else {
        batchEndBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public Builder mergeBatchEnd(com.google.protobuf.Timestamp value) {
      if (batchEndBuilder_ == null) {
        if (batchEnd_ != null) {
          batchEnd_ =
            com.google.protobuf.Timestamp.newBuilder(batchEnd_).mergeFrom(value).buildPartial();
        } else {
          batchEnd_ = value;
        }
        onChanged();
      } else {
        batchEndBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public Builder clearBatchEnd() {
      if (batchEndBuilder_ == null) {
        batchEnd_ = null;
        onChanged();
      } else {
        batchEnd_ = null;
        batchEndBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getBatchEndBuilder() {
      
      onChanged();
      return getBatchEndFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getBatchEndOrBuilder() {
      if (batchEndBuilder_ != null) {
        return batchEndBuilder_.getMessageOrBuilder();
      } else {
        return batchEnd_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : batchEnd_;
      }
    }
    /**
     * <pre>
     * when client sent batched data
     * </pre>
     *
     * <code>.google.protobuf.Timestamp batch_end = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getBatchEndFieldBuilder() {
      if (batchEndBuilder_ == null) {
        batchEndBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getBatchEnd(),
                getParentForChildren(),
                isClean());
        batchEnd_ = null;
      }
      return batchEndBuilder_;
    }

    private java.util.List<iet.distributed.telemetry.SensorData> sensorData_ =
      java.util.Collections.emptyList();
    private void ensureSensorDataIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sensorData_ = new java.util.ArrayList<iet.distributed.telemetry.SensorData>(sensorData_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        iet.distributed.telemetry.SensorData, iet.distributed.telemetry.SensorData.Builder, iet.distributed.telemetry.SensorDataOrBuilder> sensorDataBuilder_;

    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public java.util.List<iet.distributed.telemetry.SensorData> getSensorDataList() {
      if (sensorDataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sensorData_);
      } else {
        return sensorDataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public int getSensorDataCount() {
      if (sensorDataBuilder_ == null) {
        return sensorData_.size();
      } else {
        return sensorDataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public iet.distributed.telemetry.SensorData getSensorData(int index) {
      if (sensorDataBuilder_ == null) {
        return sensorData_.get(index);
      } else {
        return sensorDataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder setSensorData(
        int index, iet.distributed.telemetry.SensorData value) {
      if (sensorDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorDataIsMutable();
        sensorData_.set(index, value);
        onChanged();
      } else {
        sensorDataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder setSensorData(
        int index, iet.distributed.telemetry.SensorData.Builder builderForValue) {
      if (sensorDataBuilder_ == null) {
        ensureSensorDataIsMutable();
        sensorData_.set(index, builderForValue.build());
        onChanged();
      } else {
        sensorDataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder addSensorData(iet.distributed.telemetry.SensorData value) {
      if (sensorDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorDataIsMutable();
        sensorData_.add(value);
        onChanged();
      } else {
        sensorDataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder addSensorData(
        int index, iet.distributed.telemetry.SensorData value) {
      if (sensorDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorDataIsMutable();
        sensorData_.add(index, value);
        onChanged();
      } else {
        sensorDataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder addSensorData(
        iet.distributed.telemetry.SensorData.Builder builderForValue) {
      if (sensorDataBuilder_ == null) {
        ensureSensorDataIsMutable();
        sensorData_.add(builderForValue.build());
        onChanged();
      } else {
        sensorDataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder addSensorData(
        int index, iet.distributed.telemetry.SensorData.Builder builderForValue) {
      if (sensorDataBuilder_ == null) {
        ensureSensorDataIsMutable();
        sensorData_.add(index, builderForValue.build());
        onChanged();
      } else {
        sensorDataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder addAllSensorData(
        java.lang.Iterable<? extends iet.distributed.telemetry.SensorData> values) {
      if (sensorDataBuilder_ == null) {
        ensureSensorDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sensorData_);
        onChanged();
      } else {
        sensorDataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder clearSensorData() {
      if (sensorDataBuilder_ == null) {
        sensorData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sensorDataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public Builder removeSensorData(int index) {
      if (sensorDataBuilder_ == null) {
        ensureSensorDataIsMutable();
        sensorData_.remove(index);
        onChanged();
      } else {
        sensorDataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public iet.distributed.telemetry.SensorData.Builder getSensorDataBuilder(
        int index) {
      return getSensorDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public iet.distributed.telemetry.SensorDataOrBuilder getSensorDataOrBuilder(
        int index) {
      if (sensorDataBuilder_ == null) {
        return sensorData_.get(index);  } else {
        return sensorDataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public java.util.List<? extends iet.distributed.telemetry.SensorDataOrBuilder> 
         getSensorDataOrBuilderList() {
      if (sensorDataBuilder_ != null) {
        return sensorDataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sensorData_);
      }
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public iet.distributed.telemetry.SensorData.Builder addSensorDataBuilder() {
      return getSensorDataFieldBuilder().addBuilder(
          iet.distributed.telemetry.SensorData.getDefaultInstance());
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public iet.distributed.telemetry.SensorData.Builder addSensorDataBuilder(
        int index) {
      return getSensorDataFieldBuilder().addBuilder(
          index, iet.distributed.telemetry.SensorData.getDefaultInstance());
    }
    /**
     * <pre>
     * batched data
     * </pre>
     *
     * <code>repeated .iet.distributed.telemetry.SensorData sensor_data = 3;</code>
     */
    public java.util.List<iet.distributed.telemetry.SensorData.Builder> 
         getSensorDataBuilderList() {
      return getSensorDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        iet.distributed.telemetry.SensorData, iet.distributed.telemetry.SensorData.Builder, iet.distributed.telemetry.SensorDataOrBuilder> 
        getSensorDataFieldBuilder() {
      if (sensorDataBuilder_ == null) {
        sensorDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            iet.distributed.telemetry.SensorData, iet.distributed.telemetry.SensorData.Builder, iet.distributed.telemetry.SensorDataOrBuilder>(
                sensorData_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sensorData_ = null;
      }
      return sensorDataBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iet.distributed.telemetry.BatchedData)
  }

  // @@protoc_insertion_point(class_scope:iet.distributed.telemetry.BatchedData)
  private static final iet.distributed.telemetry.BatchedData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new iet.distributed.telemetry.BatchedData();
  }

  public static iet.distributed.telemetry.BatchedData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BatchedData>
      PARSER = new com.google.protobuf.AbstractParser<BatchedData>() {
    @java.lang.Override
    public BatchedData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BatchedData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BatchedData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BatchedData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public iet.distributed.telemetry.BatchedData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

